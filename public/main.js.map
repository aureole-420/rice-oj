{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/navigation-bar/navigation-bar.component.css","webpack:///./src/app/components/navigation-bar/navigation-bar.component.html","webpack:///./src/app/components/navigation-bar/navigation-bar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/services/collaboration.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!-- <app-problem-list></app-problem-list>  -->  <!-- 现在hardcode了problemlist-->\\n\\n<app-navigation-bar></app-navigation-bar>\\n\\n<router-outlet></router-outlet>   \\n<!-- router的标准用法，把router当作一个component用 === router-outlet 是selector！是angular framework\\n提供的selector！-->\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';  /* import form module [()]=  two way binding, ()= one way binding*/\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nimport {routing} from './app.routes';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { NavigationBarComponent } from './components/navigation-bar/navigation-bar.component';\n\n\nimport {HttpClientModule} from '@angular/common/http';\nimport { EditorComponent } from './components/editor/editor.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    NavigationBarComponent,\n    EditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,  /* 这里一定要加，不然就不能显示form！ */\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Routes, RouterModule} from '@angular/router';\nimport {ProblemListComponent} from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent} from './components/problem-detail/problem-detail.component';\n\n/*\n为什么放在app下面？ ---- route 服务整个app，所以直接放在app里\n跟restful api有点像，但前端没有crud （crud是对后端的）\n*/\n/* 内部是一个数组*/\nconst routes: Routes = [\n    {\n        path: '', /* 为什么需要空路径？比如 bittiger.io/ -- redirect to bittiger.io/home */\n        redirectTo: 'problems', /*不specify具体路径，那就redirect到problems */\n        pathMatch: 'full'   /* full 和 partial两种 */\n    }, \n    {\n        path: 'problems',\n        component: ProblemListComponent  /* 把path指向某个component，可以多次redirect to,最终总得resolve到一个上面去 */\n    },\n    {\n        path: 'problems/:id', /* 具体的problem，冒号表示后面事变量名，而不是literal path */\n        /* https://angular-2-training-book.rangle.io/handout/routing/routeparams.html  */\n        component: ProblemDetailComponent\n    }, \n    {\n        path: '**', /* 无效路径 */\n        redirectTo: 'problems'\n    }\n];\n\nexport const routing = RouterModule.forRoot(routes); /* 上面是路径的定义，这里是实施，传到angualr里面去 */","module.exports = \"@media screen {\\n    #editor {\\n      height: 600px;\\n    }\\n    .lang-select {\\n      width: 100px;\\n      margin-right: 10px;\\n    }\\n    header .btn {\\n      margin: 0 5px;\\n    }\\n    footer .btn {\\n      margin: 0 5px;\\n}\\n.editor-footer, .editor-header {\\n      margin: 10px 0;\\n    }\\n.cursor {\\n/*position:absolute;*/ background: rgba(0, 250, 0, 0.5); z-index: 40;\\nwidth: 2px !important;\\n} }\"","module.exports = \"<section>\\n    <header class=\\\"editor-header\\\">\\n      <div class=\\\"row\\\">\\n        <select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\"\\n          [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n        <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n          {{language}}\\n        </option>\\n        </select>\\n        <!--reset button -->\\n        <!-- Button trigger modal -->\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\n          Reset\\n        </button>\\n  \\n        <!-- Modal -->\\n        <div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n          <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Are you sure</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                You will lose current code in the editor, are you sure?\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\"\\n                (click)=\\\"resetEditor()\\\">Reset</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </header>\\n    \\n    <div id=\\\"editor\\\">\\n    </div><!-- This is the body -->\\n    <div>{{output}}</div>\\n\\n\\n    <footer class=\\\"editor-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" \\n        (click)=\\\"submit()\\\">Submit Solution</button>\\n    </footer>\\n  </section>\"","import { Component, OnInit } from '@angular/core';\nimport {CollaborationService} from '../../services/collaboration.service';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {DataService} from '../../services/data.service';\n\ndeclare var ace: any; \n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\n\n\nexport class EditorComponent implements OnInit {\n  sessionId: string;\n\n  editor: any;\n  languages: string[] = ['Java', 'Python', 'C++'];\n  language: string = 'Java';\n  output: string = '';\n\n  \n\n  defaultContent = {\n    \"Java\": `public class Example {\n      public static void main(String[] args) {\n        // Type your Java code here.\n      }\n    }`, // use `` to write multi-line text\n    \"Python\": `class Solution:\n    def example():\n        # write your python code here.`,\n    \n     \"C++\" : `\n     int main() {\n       return 0;\n     }\n    `\n  }\n  \n  // inject CollaborationService\n  constructor(private collaboration: CollaborationService, \n      private route: ActivatedRoute, \n      private dataService: DataService) { }\n\n  ngOnInit() {\n    // use problemid as session id\n    // since we subscribe the changes, every time the params changes,\n    // session id will be updated and the editor will be initilized.\n    this.route.params\n    .subscribe(params => {\n      this.sessionId = params['id'];\n      this.initEditor();\n    });\n    this.collaboration.restoreBuffer();\n    // // \"editor\" is the id in html\n    // this.editor = ace.edit(\"editor\");\n    // this.editor.setTheme(\"ace/theme/eclipse\");\n    // // this.editor.getSession().setMode(\"ace/mode/java\");\n    // // // set the java\n    // // this.editor.setValue(this.defaultContent[\"Java\"]);\n    // this.resetEditor();\n\n    // this.collaboration.init();\n\n\n  }\n\n  initEditor(): void {\n    this.editor = ace.edit(\"editor\");\n    this.editor.setTheme(\"ace/theme/eclipse\");\n    this.resetEditor();\n    document.getElementsByTagName('textarea')[0].focus();\n\n    // setup collaboration socket\n    this.collaboration.init(this.editor, this.sessionId);\n    this.editor.lastAppliedChange = null;\n\n    // register change call back\n    this.editor.on(\"change\", (e) => {\n      console.log('eidtor change:' + JSON.stringify(e));\n      // check if the change is same as last change\n      // if they are the same, skip this change\n      if (this.editor.lastAppliedChange != e) {\n        this.collaboration.change(JSON.stringify(e));\n      }\n    })\n  }\n\n  resetEditor() : void {\n    this.editor.setValue(this.defaultContent[this.language]);\n    this.editor.getSession().setMode(\n      \"ace/mode/\" + this.language.toLowerCase() \n    );\n  }\n\n  setLanguage(language: string) : void {\n    this.language = language;\n    this.resetEditor(); // when language changes, need to reset the editor\n  }\n\n  submit(): void {\n    let user_code = this.editor.getValue();\n    console.log(user_code);\n    // create object that contains user's code and language\n    // send this to server\n    const data = {\n      user_code: user_code,\n      lang: this.language.toLocaleLowerCase()\n    }\n\n    console.log(\"<editor.component.submit()> sending data to data service\");\n    console.log(data);\n\n    // build and run return a promise\n    this.dataService.buildAndRun(data)\n      .then((res) => {\n        // this.output = res.text;\n        console.log(\"<editor.component.submit()> receive data from dataService.buildAndRun()\" + res);\n        this.output = res;\n        console.log(\"<editor.component.submit()> receive data from dataService.buildAndRun()\" + this.output);\n      });\n  }\n\n}\n","module.exports = \".main{\\n    text-align: center; /*让div内部文字居中*/\\n}\"","module.exports = \"<!-- 收获：\\n1. two way binding [(ngModel)]\\n2. event binding (click) -->\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n    <div class=\\\"collapse navbar-collapse main\\\" id=\\\"navbarNavDropdown\\\">\\n        <ul class=\\\"navbar-nav\\\">\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"/problems\\\">Problems</a>\\n          </li>\\n        </ul>\\n\\n        <form class=\\\"form-inline\\\" >\\n            <!-- The name attribute specifies the name of an <input> element. \\n            The name attribute is used to reference elements in a JavaScript, or \\n            to reference form data after a form is submitted. \\n            Note: Only form elements with a name attribute will have their values \\n            passed when submitting a form. -->\\n          <input class=\\\"form-control mr-sm-2\\\" name= \\\"problemName\\\" type=\\\"search\\\" placeholder=\\\"Search problem name\\\" \\n           [(ngModel)]=\\\"nameOfProblemToSearch\\\">\\n          <button class=\\\"btn btn-outline-success\\\" (click)=\\\"searchProblem()\\\">Search</button>\\n        </form>\\n    </div>\\n</nav>\\n\\n\\n<!-- some extra space -->\\n<div>&nbsp;</div> \\n\\n\\n\\n\\n \"","// 收获：\n// 1. Router.navigateByUrl做跳转\n// 2. handle undefined: typeof variable == 'undefined'\n// 3. in function body, call attribute with this.attrName;\n\nimport { Component, OnInit } from '@angular/core';\nimport {DataService} from '../../services/data.service';\nimport {Router} from '@angular/router';\nimport {Problem} from '../../models/problem.model';\n\n@Component({\n  selector: 'app-navigation-bar',\n  templateUrl: './navigation-bar.component.html',\n  styleUrls: ['./navigation-bar.component.css']\n})\nexport class NavigationBarComponent implements OnInit {\n\n  nameOfProblemToSearch : string = \"Search by problem name\";\n  problemId: number = -1;\n\n  constructor(private dataService: DataService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  searchProblem() {\n\n    console.log(\"search problem done! \");\n    console.log(this.nameOfProblemToSearch);\n    \n    var temp = this.dataService.searchProblemByName(this.nameOfProblemToSearch);\n    console.log(temp);\n    console.log(typeof temp == 'undefined');\n\n    if (typeof temp == 'undefined') {\n      console.log(\"problem [\" + this.nameOfProblemToSearch + \"] does not exists!\");\n      return;\n    }\n\n    this.problemId = this.dataService.searchProblemByName(this.nameOfProblemToSearch).id;\n    console.log(\"problem [\" + this.nameOfProblemToSearch + \"] is indexed \" + this.problemId);\n\n    if (this.problemId !== -1) {\n        this.router.navigateByUrl(\"/problems/\" + this.problemId);\n    }\n\n  }\n\n\n\n}\n","module.exports = \"/* .new-problem {\\n    background-color: #42f4d6;\\n} */\"","module.exports = \"<!-- <div class = \\\"new-problem\\\">\\\"This is an indicator that ur new-problem\\\"</div> -->\\n\\n<div class = \\\"new-problem\\\">\\n  <form #formRef = \\\"ngForm\\\">\\n\\n    <div class = \\\"form-group\\\">\\n      <label for=\\\"problemName\\\">Problem name</label>\\n      <input name = \\\"problemName\\\" id=\\\"probklemName\\\" class=\\\"form-control\\\"\\n        type=\\\"text\\\" required placeholder=\\\"Please enter problem name\\\"\\n        [(ngModel)] = \\\"newProblem.name\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"problemDesc\\\">Problem description</label>\\n        <textarea name=\\\"problemDesc\\\" id=\\\"problemDesc\\\" class=\\\"form-control\\\"\\n        placeholder=\\\"Please enter problem description\\\"\\n        [(ngModel)] = \\\"newProblem.desc\\\" rows=\\\"3\\\">\\n        </textarea>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"problemDifficulty\\\">Problem difficulty</label>\\n        <select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n        [(ngModel)]=\\\"newProblem.difficulty\\\">      \\n                <option *ngFor = \\\"let difficulty of difficulties\\\" [value] = \\\"difficulty\\\">\\n                  {{difficulty}}\\n                </option>\\n        </select>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\"\\n         (click) = \\\"addProblem()\\\">Add problem</button>\\n      </div>\\n    </div>\\n\\n  </form>\\n</div>\\n<br/>\\n<br/>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Problem} from '../../models/problem.model';\nimport {DataService} from '../../services/data.service';\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({ /* freeze表示内容固定，而不能通过reference改变 */\n  id: 0,\n  name: '',\n  desc: '',\n  difficulty:'easy'\n})\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n\n  /* 用来track表的输入 */\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM); /* 深度copy object，因为我们希望DEFAULT_PROBLEM一直不变 */\n  difficulties: string[] = ['easy', 'medium', 'hard','super'];\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n  }\n\n  /* 把problem传入PROBLEM数组 */\n  addProblem() {\n    this.dataService.addProblem(this.newProblem); /* 这一步problem已经被加进去了 */\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);  /* 重新提交时，不会覆盖前一次提交的newProblem, 相当于refresh */\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<!-- 这里是reactive programming，随着用户界面变化而显示屏宽不同-->\\n\\n<div class=\\\"container\\\" *ngIf=\\\"problem\\\"> <!-- ngIf check一下problem是否存在，不存在就不显示-->\\n  <div class=\\\"col-sm-12 col-md-4\\\">\\n    <div>\\n      <h2>\\n        {{problem.id}}. {{problem.name}}\\n      </h2>\\n      <p>\\n        {{problem.desc}}\\n      </p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"hidden-xs col-sm-12 col-md-8\\\">\\n    <app-editor></app-editor>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Params} from '@angular/router'; /* 通过activated route 拿到当前生效的拿个路径 */\nimport {Problem} from '../../models/problem.model'; /* 类型 */\nimport {DataService} from '../../services/data.service';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\n\nexport class ProblemDetailComponent implements OnInit {\n  problem: Problem;\n\n  /* 服务注入！ 需要用activateRoute那道当前路径，因为id再路径里面 */\n  /* activeRoute是angular提供的服务 */\n  constructor(private dataService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    /* this.route 永远是当前路径， 通过angular framework的ActivatedRoute获得 */\n    /* https://angular-2-training-book.rangle.io/handout/routing/routeparams.html */\n    this.route.params.subscribe(params => { /* subscribed */\n      // this.problem = this.dataService.getProblem(+params['id']); /* +\"10\" 从string变成一个数字  */\n      // /* params 是从 route里来的, params都放在一个数组里，用变量名选取。 */\n\n      this.dataService.getProblem(+params['id'])\n        .then(problem => this.problem = problem);\n        //getProblem return a promise.\n        //problem is the returned data source. //this.problem is your local\n        //problem.\n    });\n  }\n\n}\n\n/*\n=> arrow 函数：\nx => y\nfunc(x) {\n  return y\n}\n*/\n","module.exports = \".difficulty {\\n    min-width: 65px;\\n    margin-right: 10px;\\n}\\n\\n.badge.difficulty {\\n    padding-top: 0.6em;\\n    color: #fbfdfa;\\n    font-size: 12px;\\n}\\n\\n.title{\\n    font-size: 1.2em;\\n}\\n\\n.diff-easy {\\n    background-color: #42ebf4;\\n}\\n\\n.diff-medium {\\n    background-color: #92cf5c;\\n}\\n\\n.diff-hard {\\n    background-color: #dd0d1e;\\n}\\n\\n.diff-super {\\n    background-color: #8d16e2;\\n}\"","module.exports = \"<!-- html 里面可以直接引用相关的ts里面的变量-->\\n\\n<div class=\\\"container\\\">\\n\\n  <!-- <app-navigation-bar></app-navigation-bar> -->\\n\\n  <app-new-problem></app-new-problem> <!--在problemlist上面增添new problem 吧-->\\n\\n  <div class=\\\"list-group\\\">\\n    <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\" [routerLink]=\\\"['/problems', problem.id]\\\"> \\n      <!-- anckor 方括号内部的变量，和后面的值绑定, routerLink see: \\n      https://angular.io/api/router/RouterLink \\n    Consider the following route configuration: [{ path: 'user/:name', component: UserCmp }]. When linking to this user/:name route, you use the RouterLink directive.\\n\\nIf the link is static, you can use the directive as follows: <a routerLink=\\\"/user/bob\\\">link to user component</a>\\n\\nIf you use dynamic values to generate the link, you can pass an array of path segments, followed by the params for each segment.\\n\\nFor instance ['/team', teamId, 'user', userName, {details: true}] means that we want to generate a link to /team/11/user/bob;details=true\\n-->\\n      <span class=\\\"{{'pull-left label difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\"> \\n        <!-- class 和css相对应，这里是拼凑的class，即， diff-easy, diff-medium, etc. -->\\n        {{problem.difficulty}}\\n      </span>\\n      <strong class =\\\"title\\\">{{problem.id}}. {{problem.name}}</strong>\\n    </a>\\n  </div>\\n</div>\"","import { Component, OnInit, OnDestroy} from '@angular/core';\nimport {Problem} from '../../models/problem.model';\nimport {DataService} from '../../services/data.service';\n\nimport {Subscription} from 'rxjs/Subscription';\n\n\n/* 外部变量 */\n/*\nconst PROBLEMS: Problem[]  = [ \n  {\n    \"id\" : 1,\n    \"name\": \"Two Sum\",\n    \"desc\": \"Given an array of integers, find two numbers such that they add up to a specific target number.\",\n    \"difficulty\": \"easy\"\n  }, \n  {\n    \"id\" : 2,\n    \"name\": \"Three Sum\",\n    \"desc\": \"Given an array of integers, find three numbers such that they add up to a specific target number.\",\n    \"difficulty\": \"medium\"\n  }\n]; \n*/\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\n\n\nexport class ProblemListComponent implements OnInit, OnDestroy {\n\n  /* 加入内部变量, 启动时会加载 */\n  problems: Problem[]; \n  subscriptionProblems: Subscription;\n\n  /* 通过constructor来injection！不用再constructor里调用； private是因为dataService不想提供给别的component用 */\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.getProblems();\n  }\n\n  ngOnDestroy() {\n    this.subscriptionProblems.unsubscribe();\n  }\n\n  getProblems() {\n    this.subscriptionProblems = this.dataService.getProblems()\n      .subscribe(problems => this.problems = problems);\n    // getProblems() return observable. need to subscribe it.\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\ndeclare var io: any;   // io is alread imported in .angular.cli.json\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n  collaborationSocket: any;\n\n\n  constructor() { }\n\n  init(editor: any, sessionId: string): void {\n    // window.location.origin: the server location on the current page\n    // for example, the current page on the browser is \"localhost:3000/problems/1\", \n    //the window.location.origin = \"http/localhost:3000\"\n\n    // this.collaborationSocket = io(window.location.origin, {query: 'message=haha'});\n\n    // this.collaborationSocket.on(\"message\", (message) => {\n    //   console.log('message received from the server: ' + message);\n    this.collaborationSocket = io(window.location.origin, {query: 'sessionId=' + sessionId});\n\n    // handle the changes sent from server.\n    this.collaborationSocket.on(\"change\", (delta: string) => {\n      console.log('collaboratioon: editor cahnges by ' + delta);\n      delta = JSON.parse(delta);\n      editor.lastAppliedChange = delta;\n      // apply the changes on editor\n      editor.getSession().getDocument().applyDeltas([delta]);\n    });\n  }\n\n  // emit event to make changes and inform server and other collaborators;\n  change(delta: string): void {\n    this.collaborationSocket.emit(\"change\", delta);\n  }\n\n  restoreBuffer(): void {\n    // user emit \"restoreBuffer \" event\n    // let server to handle this event\n    this.collaborationSocket.emit(\"restoreBuffer\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Problem} from '../models/problem.model';\n// import {PROBLEMS} from \"../mock-problems\";\n\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs/Rx';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\n\n\n\n/* service 可以看成一个全局变量 */\n@Injectable({\n  providedIn: 'root'\n}) /* angular 6 中的简化，injectable表示别的地方可以被用， providedIn:'root' 表示提供给所有的component，\n如果只想提供给某个component，就把root换成想要用的component就可以了 */\nexport class DataService {\n  // problems: Problem[] = PROBLEMS;\n\n  // BehavivorSubject: when subscribe, we can get the value that emitted last time.\n  private _problemSource = new BehaviorSubject<Problem[]>([]);\n\n  \n  constructor(private httpClient:HttpClient) { }\n\n  getProblems(): Observable<Problem[]> {\n    this.httpClient.get('api/v1/problems') // Problem[]\n      .toPromise()\n      .then((res:any) => {\n        this._problemSource.next(res); // .next(): next data. observable/subject 发布数据\n      })\n      .catch(this.handleError);\n\n      return this._problemSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    return this.httpClient.get(`api/v1/problems/${id}`)\n    .toPromise() \n    .then((res:any) => res) // use then, catch to consume the promise, res \n    .catch(this.handleError); // use error handler (a function) to handle error\n  }\n\n  addProblem(problem: Problem) {\n    const options = { headers: new HttpHeaders({\n      'Content-Type':'application/json'\n    })};\n\n    return this.httpClient.post('api/v1/problems', problem, options)\n      .toPromise()\n      .then((res: any) => {\n        this.getProblems();\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n\n\n  private handleError(err: any) : Promise<any> {\n    console.error('an error occured', err);\n    return Promise.reject(err.body || err);\n  }\n\n\n  // getProblems() : Problem[] {\n  //   return this.problems;\n  // }\n\n  // getProblem(id: number) : Problem { /* number 在ts里跟基本类型差不多 */\n  //   return this.problems.find( (problem) => problem.id === id);\n  //   /* arrow function (param) => {expression}   --- equivalent to --- => {return expression;}*/\n  //   /* (problem) => problem.id === id  ---等同于---  一个返回boolean的函数， === 不止判断值，还判断类型相同*/\n  // }\n\n  // addProblem(problem: Problem) {\n  //   problem.id = this.problems.length + 1;\n  //   this.problems.push(problem);\n  // }\n\n  searchProblemByName(problemName: String ) : Problem {\n    return null;\n    // return this.problems.find((problem) => problem.name === problemName);\n  }\n\n  buildAndRun(data): Promise<any> {\n    // define the content-type in http request header\n    //content-type declares the body type when you issue a POST request\n    const options = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\n    \n    return this.httpClient.post('api/v1/build_and_run', data, options)\n      .toPromise() // convert observable to promise\n      .then(res => { // 返回的res 应该是个\n        console.log(\"<data.service.buildAndRun()> result received for buildAndRun request\");\n        console.log(res);\n        return res;\n      })\n      .catch(this.handleError);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}